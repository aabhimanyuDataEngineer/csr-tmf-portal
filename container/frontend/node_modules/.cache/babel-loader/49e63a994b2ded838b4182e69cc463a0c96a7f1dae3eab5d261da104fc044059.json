{"ast":null,"code":"var _jsxFileName = \"/Users/abhimanyuacharya/Documents/medical-writing/csr-tmf-portal/container/frontend/src/components/SearchInterface/SearchInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Card, CardContent, TextField, Button, ToggleButton, ToggleButtonGroup, Chip, Typography, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, OutlinedInput, Autocomplete, IconButton, Divider } from '@mui/material';\nimport { Search, ExpandMore, FilterList, Clear, Psychology, TextFields, AutoAwesome } from '@mui/icons-material';\nimport { SearchType, DocumentType } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchInterface = ({\n  onSearch,\n  loading = false\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchType, setSearchType] = useState(SearchType.HYBRID);\n  const [filters, setFilters] = useState({});\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Mock data for filters\n  const studyOptions = ['ABC-001', 'DEF-002', 'GHI-003', 'JKL-004'];\n  const csrSectionCodes = ['1.0 Synopsis', '2.0 Introduction', '3.0 Objectives', '4.0 Methods'];\n  const tmfSectionCodes = ['Z1 Trial Management', 'Z2 Central Documents', 'Z3 Site Files'];\n  const handleSearch = () => {\n    if (query.trim()) {\n      onSearch(query, searchType, filters);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const clearFilters = () => {\n    setFilters({});\n  };\n  const getSearchTypeIcon = type => {\n    switch (type) {\n      case SearchType.KEYWORD:\n        return /*#__PURE__*/_jsxDEV(TextFields, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this);\n      case SearchType.SEMANTIC:\n        return /*#__PURE__*/_jsxDEV(Psychology, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this);\n      case SearchType.HYBRID:\n        return /*#__PURE__*/_jsxDEV(AutoAwesome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getSearchTypeDescription = type => {\n    switch (type) {\n      case SearchType.KEYWORD:\n        return 'Exact text matching for precise term searches';\n      case SearchType.SEMANTIC:\n        return 'AI-powered meaning-based search for conceptual matches';\n      case SearchType.HYBRID:\n        return 'Combined keyword and semantic search for best results';\n      default:\n        return '';\n    }\n  };\n  const activeFiltersCount = Object.values(filters).filter(Boolean).length;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Advanced Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Search clinical documents...\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          onKeyPress: handleKeyPress,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(Search, {\n              sx: {\n                mr: 1,\n                color: 'text.secondary'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 31\n            }, this),\n            endAdornment: query && /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => setQuery(''),\n              children: /*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          },\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"Search Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n            value: searchType,\n            exclusive: true,\n            onChange: (_, newType) => newType && setSearchType(newType),\n            size: \"small\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: SearchType.KEYWORD,\n              children: [/*#__PURE__*/_jsxDEV(TextFields, {\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), \"Keyword\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: SearchType.SEMANTIC,\n              children: [/*#__PURE__*/_jsxDEV(Psychology, {\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), \"Semantic\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: SearchType.HYBRID,\n              children: [/*#__PURE__*/_jsxDEV(AutoAwesome, {\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), \"Hybrid\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              mt: 1,\n              display: 'block'\n            },\n            children: getSearchTypeDescription(searchType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          fullWidth: true,\n          onClick: handleSearch,\n          disabled: !query.trim() || loading,\n          startIcon: getSearchTypeIcon(searchType),\n          children: loading ? 'Searching...' : 'Search Documents'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        expanded: showFilters,\n        onChange: () => setShowFilters(!showFilters),\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 41\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: \"Advanced Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), activeFiltersCount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n              size: \"small\",\n              label: `${activeFiltersCount} active`,\n              color: \"primary\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Document Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: filters.documentType || '',\n                onChange: e => setFilters({\n                  ...filters,\n                  documentType: e.target.value\n                }),\n                input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  label: \"Document Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 26\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"All Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: DocumentType.CSR,\n                  children: \"Clinical Study Reports (CSR)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: DocumentType.TMF,\n                  children: \"Trial Master Files (TMF)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              size: \"small\",\n              options: studyOptions,\n              value: filters.studyId || null,\n              onChange: (_, newValue) => setFilters({\n                ...filters,\n                studyId: newValue || undefined\n              }),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Study ID\",\n                placeholder: \"Select study...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              size: \"small\",\n              multiple: true,\n              options: filters.documentType === DocumentType.TMF ? tmfSectionCodes : csrSectionCodes,\n              value: filters.sectionCodes || [],\n              onChange: (_, newValue) => setFilters({\n                ...filters,\n                sectionCodes: newValue\n              }),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Section Codes\",\n                placeholder: filters.documentType === DocumentType.TMF ? \"Select TMF zones...\" : \"Select CSR sections...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this),\n              renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                variant: \"outlined\",\n                label: option,\n                size: \"small\",\n                ...getTagProps({\n                  index\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), activeFiltersCount > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: clearFilters,\n              startIcon: /*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 30\n              }, this),\n              children: \"Clear All Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          p: 2,\n          bgcolor: 'background.default',\n          borderRadius: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Search Tips:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), \" Use quotes for exact phrases, combine terms with AND/OR, or try semantic search for concept-based matching across clinical terminology.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchInterface, \"8RTO5yQDDoY8MCk7R2RC2+mZHUA=\");\n_c = SearchInterface;\nexport default SearchInterface;\nvar _c;\n$RefreshReg$(_c, \"SearchInterface\");","map":{"version":3,"names":["React","useState","Box","Card","CardContent","TextField","Button","ToggleButton","ToggleButtonGroup","Chip","Typography","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","OutlinedInput","Autocomplete","IconButton","Divider","Search","ExpandMore","FilterList","Clear","Psychology","TextFields","AutoAwesome","SearchType","DocumentType","jsxDEV","_jsxDEV","SearchInterface","onSearch","loading","_s","query","setQuery","searchType","setSearchType","HYBRID","filters","setFilters","showFilters","setShowFilters","studyOptions","csrSectionCodes","tmfSectionCodes","handleSearch","trim","handleKeyPress","event","key","clearFilters","getSearchTypeIcon","type","KEYWORD","fileName","_jsxFileName","lineNumber","columnNumber","SEMANTIC","getSearchTypeDescription","activeFiltersCount","Object","values","filter","Boolean","length","children","variant","gutterBottom","sx","mb","fullWidth","placeholder","value","onChange","e","target","onKeyPress","InputProps","startAdornment","mr","color","endAdornment","size","onClick","exclusive","_","newType","mt","display","disabled","startIcon","my","expanded","expandIcon","alignItems","gap","label","flexDirection","documentType","input","CSR","TMF","options","studyId","newValue","undefined","renderInput","params","multiple","sectionCodes","renderTags","getTagProps","map","option","index","p","bgcolor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/abhimanyuacharya/Documents/medical-writing/csr-tmf-portal/container/frontend/src/components/SearchInterface/SearchInterface.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  ToggleButton,\n  ToggleButtonGroup,\n  Chip,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  OutlinedInput,\n  Autocomplete,\n  IconButton,\n\n  Divider,\n} from '@mui/material';\nimport {\n  Search,\n  ExpandMore,\n  FilterList,\n  Clear,\n  Psychology,\n  TextFields,\n  AutoAwesome,\n} from '@mui/icons-material';\nimport { SearchType, DocumentType, SearchFilters } from '../../types';\n\ninterface SearchInterfaceProps {\n  onSearch: (query: string, searchType: SearchType, filters: SearchFilters) => void;\n  loading?: boolean;\n}\n\nconst SearchInterface: React.FC<SearchInterfaceProps> = ({ onSearch, loading = false }) => {\n  const [query, setQuery] = useState('');\n  const [searchType, setSearchType] = useState<SearchType>(SearchType.HYBRID);\n  const [filters, setFilters] = useState<SearchFilters>({});\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Mock data for filters\n  const studyOptions = ['ABC-001', 'DEF-002', 'GHI-003', 'JKL-004'];\n  const csrSectionCodes = ['1.0 Synopsis', '2.0 Introduction', '3.0 Objectives', '4.0 Methods'];\n  const tmfSectionCodes = ['Z1 Trial Management', 'Z2 Central Documents', 'Z3 Site Files'];\n\n  const handleSearch = () => {\n    if (query.trim()) {\n      onSearch(query, searchType, filters);\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n  };\n\n  const getSearchTypeIcon = (type: SearchType) => {\n    switch (type) {\n      case SearchType.KEYWORD:\n        return <TextFields />;\n      case SearchType.SEMANTIC:\n        return <Psychology />;\n      case SearchType.HYBRID:\n        return <AutoAwesome />;\n      default:\n        return <Search />;\n    }\n  };\n\n  const getSearchTypeDescription = (type: SearchType) => {\n    switch (type) {\n      case SearchType.KEYWORD:\n        return 'Exact text matching for precise term searches';\n      case SearchType.SEMANTIC:\n        return 'AI-powered meaning-based search for conceptual matches';\n      case SearchType.HYBRID:\n        return 'Combined keyword and semantic search for best results';\n      default:\n        return '';\n    }\n  };\n\n  const activeFiltersCount = Object.values(filters).filter(Boolean).length;\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Advanced Search\n        </Typography>\n\n        {/* Search Input */}\n        <Box sx={{ mb: 3 }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Search clinical documents...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            onKeyPress={handleKeyPress}\n            InputProps={{\n              startAdornment: <Search sx={{ mr: 1, color: 'text.secondary' }} />,\n              endAdornment: query && (\n                <IconButton size=\"small\" onClick={() => setQuery('')}>\n                  <Clear />\n                </IconButton>\n              ),\n            }}\n            sx={{ mb: 2 }}\n          />\n\n          {/* Search Type Selection */}\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle2\" gutterBottom>\n              Search Mode\n            </Typography>\n            <ToggleButtonGroup\n              value={searchType}\n              exclusive\n              onChange={(_, newType) => newType && setSearchType(newType)}\n              size=\"small\"\n              fullWidth\n            >\n              <ToggleButton value={SearchType.KEYWORD}>\n                <TextFields sx={{ mr: 1 }} />\n                Keyword\n              </ToggleButton>\n              <ToggleButton value={SearchType.SEMANTIC}>\n                <Psychology sx={{ mr: 1 }} />\n                Semantic\n              </ToggleButton>\n              <ToggleButton value={SearchType.HYBRID}>\n                <AutoAwesome sx={{ mr: 1 }} />\n                Hybrid\n              </ToggleButton>\n            </ToggleButtonGroup>\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\n              {getSearchTypeDescription(searchType)}\n            </Typography>\n          </Box>\n\n          {/* Search Button */}\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            fullWidth\n            onClick={handleSearch}\n            disabled={!query.trim() || loading}\n            startIcon={getSearchTypeIcon(searchType)}\n          >\n            {loading ? 'Searching...' : 'Search Documents'}\n          </Button>\n        </Box>\n\n        <Divider sx={{ my: 2 }} />\n\n        {/* Advanced Filters */}\n        <Accordion expanded={showFilters} onChange={() => setShowFilters(!showFilters)}>\n          <AccordionSummary expandIcon={<ExpandMore />}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <FilterList />\n              <Typography variant=\"subtitle2\">Advanced Filters</Typography>\n              {activeFiltersCount > 0 && (\n                <Chip\n                  size=\"small\"\n                  label={`${activeFiltersCount} active`}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                />\n              )}\n            </Box>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              {/* Document Type Filter */}\n              <FormControl fullWidth size=\"small\">\n                <InputLabel>Document Type</InputLabel>\n                <Select\n                  value={filters.documentType || ''}\n                  onChange={(e) => setFilters({ ...filters, documentType: e.target.value as DocumentType })}\n                  input={<OutlinedInput label=\"Document Type\" />}\n                >\n                  <MenuItem value=\"\">All Types</MenuItem>\n                  <MenuItem value={DocumentType.CSR}>Clinical Study Reports (CSR)</MenuItem>\n                  <MenuItem value={DocumentType.TMF}>Trial Master Files (TMF)</MenuItem>\n                </Select>\n              </FormControl>\n\n              {/* Study ID Filter */}\n              <Autocomplete\n                size=\"small\"\n                options={studyOptions}\n                value={filters.studyId || null}\n                onChange={(_, newValue) => setFilters({ ...filters, studyId: newValue || undefined })}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Study ID\" placeholder=\"Select study...\" />\n                )}\n              />\n\n              {/* Section Codes Filter */}\n              <Autocomplete\n                size=\"small\"\n                multiple\n                options={filters.documentType === DocumentType.TMF ? tmfSectionCodes : csrSectionCodes}\n                value={filters.sectionCodes || []}\n                onChange={(_, newValue) => setFilters({ ...filters, sectionCodes: newValue })}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Section Codes\"\n                    placeholder={\n                      filters.documentType === DocumentType.TMF\n                        ? \"Select TMF zones...\"\n                        : \"Select CSR sections...\"\n                    }\n                  />\n                )}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      label={option}\n                      size=\"small\"\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n              />\n\n              {/* Clear Filters Button */}\n              {activeFiltersCount > 0 && (\n                <Button\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={clearFilters}\n                  startIcon={<Clear />}\n                >\n                  Clear All Filters\n                </Button>\n              )}\n            </Box>\n          </AccordionDetails>\n        </Accordion>\n\n        {/* Search Tips */}\n        <Box sx={{ mt: 2, p: 2, bgcolor: 'background.default', borderRadius: 1 }}>\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            <strong>Search Tips:</strong> Use quotes for exact phrases, combine terms with AND/OR,\n            or try semantic search for concept-based matching across clinical terminology.\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SearchInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}