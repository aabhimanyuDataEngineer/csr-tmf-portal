{"ast":null,"code":"// Client configuration for multi-tenant deployment\n\nexport const clientConfigs = {\n  gilead: {\n    clientName: 'Gilead',\n    logoImage: '/assets/logos/gilead.png',\n    backgroundImage: '/assets/backgrounds/gilead-bg.jpg',\n    primaryColor: '#E91E63',\n    // Gilead pink/red\n    secondaryColor: '#1976d2',\n    companyCode: 'CMC RA'\n  },\n  exelixis: {\n    clientName: 'Exelixis',\n    logoImage: '/assets/logos/exelixis.png',\n    backgroundImage: '/assets/backgrounds/exelixis-bg.jpg',\n    primaryColor: '#2196F3',\n    // Exelixis blue\n    secondaryColor: '#FF9800',\n    companyCode: 'UBI'\n  },\n  abbvie: {\n    clientName: 'AbbVie',\n    logoImage: '/assets/logos/abbvie.png',\n    backgroundImage: '/assets/backgrounds/abbvie-bg.jpg',\n    primaryColor: '#673AB7',\n    // AbbVie purple\n    secondaryColor: '#4CAF50',\n    companyCode: 'UBI'\n  },\n  default: {\n    clientName: 'Clinical Portal',\n    logoImage: '/assets/logos/default.png',\n    primaryColor: '#1976d2',\n    secondaryColor: '#dc004e',\n    companyCode: 'UBI'\n  }\n};\n\n// Get client configuration from environment or URL parameter\nexport const getCurrentClientConfig = () => {\n  var _process$env$REACT_AP;\n  // Check URL parameter first (for demo purposes)\n  const urlParams = new URLSearchParams(window.location.search);\n  const clientParam = urlParams.get('client');\n\n  // Check environment variable\n  const envClient = (_process$env$REACT_AP = process.env.REACT_APP_CLIENT_NAME) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.toLowerCase();\n\n  // Determine client\n  const clientKey = clientParam || envClient || 'default';\n  return clientConfigs[clientKey] || clientConfigs.default;\n};\n\n// Environment configuration\nexport const getEnvironmentConfig = () => ({\n  clientName: process.env.REACT_APP_CLIENT_NAME || 'Clinical Portal',\n  logoImage: process.env.REACT_APP_LOGO_IMAGE || '/assets/logos/default.png',\n  backgroundImage: process.env.REACT_APP_BACKGROUND_IMAGE,\n  companyCode: process.env.REACT_APP_COMPANY_CODE || 'UBI'\n});","map":{"version":3,"names":["clientConfigs","gilead","clientName","logoImage","backgroundImage","primaryColor","secondaryColor","companyCode","exelixis","abbvie","default","getCurrentClientConfig","_process$env$REACT_AP","urlParams","URLSearchParams","window","location","search","clientParam","get","envClient","process","env","REACT_APP_CLIENT_NAME","toLowerCase","clientKey","getEnvironmentConfig","REACT_APP_LOGO_IMAGE","REACT_APP_BACKGROUND_IMAGE","REACT_APP_COMPANY_CODE"],"sources":["/Users/abhimanyuacharya/Documents/medical-writing/csr-tmf-portal/container/frontend/src/config/clientConfig.ts"],"sourcesContent":["// Client configuration for multi-tenant deployment\nexport interface ClientConfig {\n  clientName: string;\n  logoImage: string;\n  backgroundImage?: string;\n  primaryColor: string;\n  secondaryColor: string;\n  companyCode: string; // e.g., \"CMC RA\", \"UBI\", etc.\n}\n\nexport const clientConfigs: Record<string, ClientConfig> = {\n  gilead: {\n    clientName: 'Gilead',\n    logoImage: '/assets/logos/gilead.png',\n    backgroundImage: '/assets/backgrounds/gilead-bg.jpg',\n    primaryColor: '#E91E63', // Gilead pink/red\n    secondaryColor: '#1976d2',\n    companyCode: 'CMC RA'\n  },\n  exelixis: {\n    clientName: 'Exelixis',\n    logoImage: '/assets/logos/exelixis.png',\n    backgroundImage: '/assets/backgrounds/exelixis-bg.jpg',\n    primaryColor: '#2196F3', // Exelixis blue\n    secondaryColor: '#FF9800',\n    companyCode: 'UBI'\n  },\n  abbvie: {\n    clientName: 'AbbVie',\n    logoImage: '/assets/logos/abbvie.png',\n    backgroundImage: '/assets/backgrounds/abbvie-bg.jpg',\n    primaryColor: '#673AB7', // AbbVie purple\n    secondaryColor: '#4CAF50',\n    companyCode: 'UBI'\n  },\n  default: {\n    clientName: 'Clinical Portal',\n    logoImage: '/assets/logos/default.png',\n    primaryColor: '#1976d2',\n    secondaryColor: '#dc004e',\n    companyCode: 'UBI'\n  }\n};\n\n// Get client configuration from environment or URL parameter\nexport const getCurrentClientConfig = (): ClientConfig => {\n  // Check URL parameter first (for demo purposes)\n  const urlParams = new URLSearchParams(window.location.search);\n  const clientParam = urlParams.get('client');\n  \n  // Check environment variable\n  const envClient = process.env.REACT_APP_CLIENT_NAME?.toLowerCase();\n  \n  // Determine client\n  const clientKey = clientParam || envClient || 'default';\n  \n  return clientConfigs[clientKey] || clientConfigs.default;\n};\n\n// Environment configuration\nexport const getEnvironmentConfig = () => ({\n  clientName: process.env.REACT_APP_CLIENT_NAME || 'Clinical Portal',\n  logoImage: process.env.REACT_APP_LOGO_IMAGE || '/assets/logos/default.png',\n  backgroundImage: process.env.REACT_APP_BACKGROUND_IMAGE,\n  companyCode: process.env.REACT_APP_COMPANY_CODE || 'UBI'\n});"],"mappings":"AAAA;;AAUA,OAAO,MAAMA,aAA2C,GAAG;EACzDC,MAAM,EAAE;IACNC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,0BAA0B;IACrCC,eAAe,EAAE,mCAAmC;IACpDC,YAAY,EAAE,SAAS;IAAE;IACzBC,cAAc,EAAE,SAAS;IACzBC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRN,UAAU,EAAE,UAAU;IACtBC,SAAS,EAAE,4BAA4B;IACvCC,eAAe,EAAE,qCAAqC;IACtDC,YAAY,EAAE,SAAS;IAAE;IACzBC,cAAc,EAAE,SAAS;IACzBC,WAAW,EAAE;EACf,CAAC;EACDE,MAAM,EAAE;IACNP,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,0BAA0B;IACrCC,eAAe,EAAE,mCAAmC;IACpDC,YAAY,EAAE,SAAS;IAAE;IACzBC,cAAc,EAAE,SAAS;IACzBC,WAAW,EAAE;EACf,CAAC;EACDG,OAAO,EAAE;IACPR,UAAU,EAAE,iBAAiB;IAC7BC,SAAS,EAAE,2BAA2B;IACtCE,YAAY,EAAE,SAAS;IACvBC,cAAc,EAAE,SAAS;IACzBC,WAAW,EAAE;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,sBAAsB,GAAGA,CAAA,KAAoB;EAAA,IAAAC,qBAAA;EACxD;EACA,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EAC7D,MAAMC,WAAW,GAAGL,SAAS,CAACM,GAAG,CAAC,QAAQ,CAAC;;EAE3C;EACA,MAAMC,SAAS,IAAAR,qBAAA,GAAGS,OAAO,CAACC,GAAG,CAACC,qBAAqB,cAAAX,qBAAA,uBAAjCA,qBAAA,CAAmCY,WAAW,CAAC,CAAC;;EAElE;EACA,MAAMC,SAAS,GAAGP,WAAW,IAAIE,SAAS,IAAI,SAAS;EAEvD,OAAOpB,aAAa,CAACyB,SAAS,CAAC,IAAIzB,aAAa,CAACU,OAAO;AAC1D,CAAC;;AAED;AACA,OAAO,MAAMgB,oBAAoB,GAAGA,CAAA,MAAO;EACzCxB,UAAU,EAAEmB,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,iBAAiB;EAClEpB,SAAS,EAAEkB,OAAO,CAACC,GAAG,CAACK,oBAAoB,IAAI,2BAA2B;EAC1EvB,eAAe,EAAEiB,OAAO,CAACC,GAAG,CAACM,0BAA0B;EACvDrB,WAAW,EAAEc,OAAO,CAACC,GAAG,CAACO,sBAAsB,IAAI;AACrD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}