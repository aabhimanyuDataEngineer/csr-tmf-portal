version: '3.8'

services:
  # Backend FastAPI service
  backend:
    build:
      context: ./Container/backend
      dockerfile: Dockerfile
    container_name: clinical-portal-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - REDIS_HOST=redis
      - CORS_ORIGINS=["http://localhost:3000"]
    env_file:
      - ./Container/backend/.env
    volumes:
      - ./Container/backend/app:/app/app
      - ./Container/backend/logs:/app/logs
    depends_on:
      - redis
    networks:
      - clinical-portal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React service
  frontend:
    build:
      context: ./Container/frontend
      dockerfile: Dockerfile
    container_name: clinical-portal-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - clinical-portal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis cache service
  redis:
    image: redis:7-alpine
    container_name: clinical-portal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - clinical-portal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

volumes:
  redis_data:
    driver: local

networks:
  clinical-portal-network:
    driver: bridge